@symbols = '!=' '<=' '>=';
 
@start = expr;
expr = orExpr;
 
orExpr = andExpr orTerm*;

orTerm = 'or'! andExpr {
	id rhs = POP();
	id lhs = POP();
	PUSH(@([lhs boolValue] || [rhs boolValue]));
};
 
andExpr = relExpr andTerm*;

andTerm = 'and'! relExpr {
	id rhs = POP();
	id lhs = POP();
	PUSH(@([lhs boolValue] && [rhs boolValue]));
};
 
relExpr = callExpr (relOp callExpr {
	id rhs = POP();
	id lhs = POP();
	PUSH(@([lhs integerValue] >= [rhs integerValue]));
})*;

relOp = '<'! | '>'! | '='! | '!='! | '<='! | '>='!;

callExpr = primary ('(' argList? ')')?;
argList = atom (',' atom)*;
 
primary = atom | '(' expr ')';
atom = obj | literal;
 
obj = id member*;
id = Word;
member = '.' id;
 
literal = QuotedString {
			PKToken *tok = POP();
			PUSH(tok.stringValue);
		}
		| Number {            
			PKToken *tok = POP();
            PUSH(@(tok.floatValue));
		}
	    | bool
		;

bool = 'yes' {POP(); PUSH(@(1));} 
     | 'no'  {POP(); PUSH(@(0));}
	 ;
